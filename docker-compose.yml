name: ${CONTAINER_NAME:-agent-sandbox}

services:
  agent-sandbox:  # Updated container name
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TZ: ${TZ:-Asia/Tokyo}  # Use detected timezone
        PRODUCT_NAME: ${PRODUCT_NAME}  # Product name for workspace path
    container_name: ${CONTAINER_NAME:-agent-sandbox}
    user: node
    working_dir: ${PRODUCT_WORK_DIR}  # Dynamic product directory
    group_add:
      - "0"  # Add node user to root group for Docker socket access
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
      - CLAUDE_CONFIG_DIR=/home/node/.claude
      - CODEX_CONFIG_DIR=/home/node/.codex
      - GEMINI_CONFIG_DIR=/home/node/.gemini
      - POWERLEVEL9K_DISABLE_GITSTATUS=true
      - DEVCONTAINER=true
      # Timezone
      - TZ=${TZ}
      # Docker-on-Docker settings
      - HOST_SANDBOX_PATH=${HOST_SANDBOX_PATH}
      - HOST_USERNAME=${HOST_USERNAME}
      - HOST_PRODUCT_PATH=${SOURCE_PATH}
      - PRODUCT_NAME=${PRODUCT_NAME}
      - PRODUCT_WORK_DIR=${PRODUCT_WORK_DIR}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - .:/opt/sandbox:delegated  # Sandbox tools mount
      - ${SOURCE_PATH}:${PRODUCT_WORK_DIR}  # Product code mount
      - claude-code-bashhistory:/commandhistory
      - claude-code-config:/home/node/.claude
      - codex-cli-config:/home/node/.codex
      - gemini-cli-config:/home/node/.gemini
      # Docker socket for Docker-on-Docker
      - /var/run/docker.sock:/var/run/docker.sock
      # Host sandbox path for Docker operations
      - ${HOST_SANDBOX_PATH}:/opt/sandbox/host:ro
    cap_add:
      - NET_ADMIN
      - NET_RAW
    env_file:
      - .env
    stdin_open: true
    tty: true
    init: true

volumes:
  claude-code-bashhistory:
    name: claude-code-bashhistory
    external: true
  claude-code-config:
    name: claude-code-config
    external: true
  codex-cli-config:
    name: codex-cli-config
    external: true
  gemini-cli-config:
    name: gemini-cli-config
    external: true
