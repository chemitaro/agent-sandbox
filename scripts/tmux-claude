#!/usr/bin/env bash
set -euo pipefail

# Unique tmux session for Claude Code
SESSION_NAME=${SESSION_NAME:-claude}
WORKDIR=${WORKDIR:-${PRODUCT_WORK_DIR}}
CLAUDE_BIN=${CLAUDE_BIN:-claude}

quote_args() {
  local out=""
  for a in "$@"; do
    out+=" "
    out+=$(printf %q "$a")
  done
  printf "%s" "$out"
}

if ! command -v tmux >/dev/null 2>&1; then
  echo "❌ tmux not found in PATH" >&2
  exit 1
fi

if ! command -v "$CLAUDE_BIN" >/dev/null 2>&1; then
  echo "❌ Claude Code CLI ('$CLAUDE_BIN') not found in PATH" >&2
  exit 1
fi

ARGS_ESC=$(quote_args "$@")
# Try to resume if possible; fall back to fresh session
RUN_CMD="( $CLAUDE_BIN --continue --dangerously-skip-permissions$ARGS_ESC 2>/dev/null || $CLAUDE_BIN --dangerously-skip-permissions$ARGS_ESC )"

if tmux has-session -t "=$SESSION_NAME" 2>/dev/null; then
  # Session exists: attach/switch
  if [[ -n "${TMUX:-}" ]]; then
    exec tmux switch-client -t "=$SESSION_NAME"
  else
    exec tmux attach-session -t "=$SESSION_NAME"
  fi
else
  # Create new session with a persistent shell, then start Claude via send-keys
  tmux new-session -d -s "$SESSION_NAME" -c "$WORKDIR"
  # Give shell a moment to initialize to avoid race on first keystrokes
  sleep 1
  tmux send-keys -t "=$SESSION_NAME:" "$RUN_CMD" Enter
  if [[ -n "${TMUX:-}" ]]; then
    exec tmux switch-client -t "=$SESSION_NAME"
  else
    exec tmux attach-session -t "=$SESSION_NAME"
  fi
fi
